name: Package

on: workflow_call

jobs:
  pack:
    runs-on: ubuntu-latest

    env:
      Configuration: Release

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.12.0'

      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: ./global.json

      - name: Restore
        run: dotnet restore ./Microsoft.Developer.Packages.slnf --verbosity normal

      - name: Build
        run: dotnet build ./Microsoft.Developer.Packages.slnf --no-restore --verbosity normal

      - name: Pack
        run: dotnet pack ./Microsoft.Developer.Packages.slnf --no-build

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: Unsigned
          path: 'artifacts/package/release/*'

  publish:
    runs-on: ubuntu-latest
    needs: [pack]

    steps:
      - name: Download Packages
        uses: actions/download-artifact@v3
        with:
          name: Unsigned
          path: '${{ github.workspace }}/packages'

      # - name: Publish Packages
      #   # use nuget.org for release packages
      #   if: ${{ github.event_name != 'pull_request' }}
      #   working-directory: ${{ github.workspace }}/packages
      #   run: dotnet nuget push **/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

      - name: Publish Packages
        # use sleet_feed for PR packages
        # if: ${{ github.event_name == 'pull_request' }}
        env:
          SLEET_FEED_TYPE: azure
          SLEET_FEED_CONTAINER: feed
          SLEET_FEED_CONNECTIONSTRING: ${{ secrets.SLEET_CONNECTIONSTRING }}
        run: |
          cd $GITHUB_WORKSPACE/packages
          dotnet tool install -g sleet
          sleet push . --skip-existing
